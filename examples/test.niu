trait MyTrait {
  type Associated;
  fn func(t: Self) -> Self#MyTrait::Associated;
}

impl MyTrait for i64 {
  type Associated = u64;
  fn func(t: i64) -> i64#MyTrait::Associated {
    1u64
  }
}

fn apply<T>(t: T) -> T#MyTrait::Associated
where T: MyTrait {
  T#MyTrait::func(t)
}

fn apply_for_i64(t: i64) -> i64#MyTrait::Associated {
  apply(t)
}
